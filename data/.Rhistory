#Modification de la projection des données
dep<-st_transform(dep_init, crs = st_crs(4326))
st_bart<-st_transform(st_bart_init, crs = st_crs(4326))
st_martin<-st_transform(st_martin_init, crs = st_crs(4326))
st_pierre_et_miquelon<-st_transform(st_pierre_et_miquelon_init, crs = st_crs(4326))
contours_iles_reprojetees<-st_transform(contours_iles_init, crs=st_crs(4326))
#Creation d'une nouvelle couche qui contient tous les departements et les iles du programme
geom_st_martin<- st_martin%>%
summarise(insee_dep="978", insee_reg="", geometry = st_union(geom))
geom_st_bart<-st_bart%>%
summarise(insee_dep="977", insee_reg="", geometry = st_union(geom))
geom_st_pierre_et_miquelon<-st_pierre_et_miquelon%>%
summarise(insee_dep="975", insee_reg="", geometry = st_union(geom))
#on vient regrouper l'ensemble de nos geometries dans un seul et même geojson
geom_final<- rbind(dep, geom_st_martin, geom_st_bart, geom_st_pierre_et_miquelon)
#Export des données transformées
st_write(obj = geom_cheflieu,
dsn = here(paste0("geom/chef_lieu_reg.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
st_write(obj = geom_final,
dsn = here(paste0("geom/source/geom_dep_com.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
st_write(obj = contours_iles_reprojetees,
dsn = here(paste0("geom/contours_iles_reprojetees.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
# I Chargement des librairies -----------
library(sf)
library(rgdal)
library(tidyverse)
library(readxl)
library(writexl)
library(RSQLite)
library(here)
#chargement des données initiales ----
geom_init<-st_read("N://DST/Carto/INTERACTIVITE/fthd_operateurs/data/geom/source/geom_dep_com.geojson")
data_init<-read_excel("N://DST/Carto/INTERACTIVITE/fthd_operateurs/data/Fichier carto_Cohésion numérique.xlsx")%>%
rename("insee_dep"="INSEE dptmt")%>%
rename("dep"="Département")%>%
rename("Logo1"="Logo")%>%
rename("Logo7"="logo7")%>%
rename("prise_encharge1"="Prise en charge supérieure à 300€ (sous conditions de ressources)")%>%
rename("prise_encharge2"="Prise en charge supérieure à 300€ (sous conditions de ressources)2")%>%
rename("prise_encharge3"="Prise en charge supérieure à 300€ (sous conditions de ressources)3")%>%
rename("prise_encharge4"="Prise en charge supérieure à 300€ (sous conditions de ressources)4")%>%
rename("prise_encharge5"="Prise en charge supérieure à 300€ (sous conditions de ressources)5")%>%
rename("prise_encharge6"="Prise en charge supérieure à 300€ (sous conditions de ressources)6")%>%
rename("prise_encharge7"="Prise en charge supérieure à 300€ (sous conditions de ressources)7")%>%
mutate(insee_dep = ifelse(nchar(insee_dep) == 1, paste0("0", insee_dep), insee_dep))
data<-data_init
#Je viens modifier les chemins des images indiquées dans le tableur initial
# Définir les correspondances entre opérateurs et logos----
correspondances <- list(
SFR = "img/Logo_SFR.png",
Dyrun = "img/Logo_DYRUN.png",
APINET = "img/Logo_APINET.png",
Dauphin = "img/Logo_Dauphin.png",
Nordnet = "img/Logo_Nordnet.png",
Numerisat = "img/Logo_Numerisat.png",
Orange = "img/Logo_Orange.png",
Outremer = "img/Logo_Outremer.png",
Skysat = "img/Logo_Skysat.png",
STOI = "img/Logo_STOI.png",
Weaccess = "img/Logo_Weaccess.png",
Xankom = "img/Logo_Xankom.png"
)
# Boucle pour parcourir chaque paire de colonnes "opérateur" et "logo"
for (i in 1:7) {
operateur_col <- paste0("opérateur", i)
logo_col <- paste0("Logo", i)
data<- data %>%
mutate({{logo_col}} := case_when(
.data[[operateur_col]] == "SFR" ~ correspondances$SFR,
.data[[operateur_col]] == "SRR" ~ correspondances$SFR,
.data[[operateur_col]] == "Dyrun" ~ correspondances$Dyrun,
.data[[operateur_col]] == "Apinet" ~ correspondances$APINET,
.data[[operateur_col]] == "Dauphin Télécom" ~ correspondances$Dauphin,
.data[[operateur_col]] == "Nordnet" ~ correspondances$Nordnet,
.data[[operateur_col]] == "Numérisat" ~ correspondances$Numerisat,
.data[[operateur_col]] == "Orange" ~ correspondances$Orange,
.data[[operateur_col]] == "Outremer Télécom" ~ correspondances$Outremer,
.data[[operateur_col]] == "SKYSAT" ~ correspondances$Skysat,
.data[[operateur_col]] == "STOI" ~ correspondances$STOI,
.data[[operateur_col]] == "Weaccess Group" ~ correspondances$Weaccess,
.data[[operateur_col]] == "Xankom" ~ correspondances$Xankom,
TRUE ~ .data[[logo_col]]
))
}
#Je vais venir joindre les données des opérateur à ma couche geojson----
data_geom<-geom_init%>%
left_join(data, by="insee_dep")
#export de la nouvelle couche de données
st_write(obj = data_geom,
dsn = ("N://DST/Carto/INTERACTIVITE/fthd_operateurs/data/geom/data_dep.geojson"),
driver = "GeoJSON", delete_layer = T, append = F)
View(data_geom)
# I Chargement des librairies -----------
library(sf)
library(rgdal)
library(tidyverse)
library(readxl)
library(writexl)
library(RSQLite)
library(here)
geom_init<-st_read(here("geom/source/centroide_fr_drom_com.gpkg"), layer="cheflieu-reg")
dep_init <-st_read("N://DST/Carto/INTERACTIVITE/fthd_operateurs/data/geom/source/fr-drom-4326-pur-style1-dep.geojson")
#modification de la projection  des données
geom_cheflieu <- st_transform(geom_init, crs = st_crs(4326))
#Chargement des fichiers des iles
st_bart_init<-st_read("geom/source/st-barth.gpkg")
st_martin_init<-st_read("geom/source/st-martin.gpkg")
st_pierre_et_miquelon_init<-st_read("geom/source/st_pierre_et_miquelon.gpkg")
#couche des contours des iles
contours_iles_init<-st_read("geom/source/contours_iles.geojson")
#Modification de la projection des données
dep<-st_transform(dep_init, crs = st_crs(4326))
st_bart<-st_transform(st_bart_init, crs = st_crs(4326))
st_martin<-st_transform(st_martin_init, crs = st_crs(4326))
st_pierre_et_miquelon<-st_transform(st_pierre_et_miquelon_init, crs = st_crs(4326))
contours_iles_reprojetees<-st_transform(contours_iles_init, crs=st_crs(4326))
#Creation d'une nouvelle couche qui contient tous les departements et les iles du programme
geom_st_martin<- st_martin%>%
summarise(insee_dep="978", insee_reg="", geometry = st_union(geom))
geom_st_bart<-st_bart%>%
summarise(insee_dep="977", insee_reg="", geometry = st_union(geom))
geom_st_pierre_et_miquelon<-st_pierre_et_miquelon%>%
summarise(insee_dep="975", insee_reg="", geometry = st_union(geom))
#on vient regrouper l'ensemble de nos geometries dans un seul et même geojson
geom_final<- rbind(dep, geom_st_martin, geom_st_bart, geom_st_pierre_et_miquelon)
#Export des données transformées
st_write(obj = geom_cheflieu,
dsn = here(paste0("geom/chef_lieu_reg.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
st_write(obj = geom_final,
dsn = here(paste0("geom/source/geom_dep_com.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
#Export des données transformées
st_write(obj = geom_cheflieu,
dsn = here(paste0("geom/chef_lieu_reg.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
st_write(obj = geom_final,
dsn = here(paste0("geom/source/geom_dep_com.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
st_write(obj = contours_iles_reprojetees,
dsn = here(paste0("geom/contours_iles_reprojetees.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
# I Chargement des librairies -----------
library(sf)
library(rgdal)
library(tidyverse)
library(readxl)
library(writexl)
library(RSQLite)
library(here)
#chargement des données initiales ----
geom_init<-st_read("N://DST/Carto/INTERACTIVITE/fthd_operateurs/data/geom/source/geom_dep_com.geojson")
data_init<-read_excel("N://DST/Carto/INTERACTIVITE/fthd_operateurs/data/Fichier carto_Cohésion numérique.xlsx")%>%
rename("insee_dep"="INSEE dptmt")%>%
rename("dep"="Département")%>%
rename("Logo1"="Logo")%>%
rename("Logo7"="logo7")%>%
rename("prise_encharge1"="Prise en charge supérieure à 300€ (sous conditions de ressources)")%>%
rename("prise_encharge2"="Prise en charge supérieure à 300€ (sous conditions de ressources)2")%>%
rename("prise_encharge3"="Prise en charge supérieure à 300€ (sous conditions de ressources)3")%>%
rename("prise_encharge4"="Prise en charge supérieure à 300€ (sous conditions de ressources)4")%>%
rename("prise_encharge5"="Prise en charge supérieure à 300€ (sous conditions de ressources)5")%>%
rename("prise_encharge6"="Prise en charge supérieure à 300€ (sous conditions de ressources)6")%>%
rename("prise_encharge7"="Prise en charge supérieure à 300€ (sous conditions de ressources)7")%>%
mutate(insee_dep = ifelse(nchar(insee_dep) == 1, paste0("0", insee_dep), insee_dep))
data<-data_init
#Je viens modifier les chemins des images indiquées dans le tableur initial
# Définir les correspondances entre opérateurs et logos----
correspondances <- list(
SFR = "img/Logo_SFR.png",
Dyrun = "img/Logo_DYRUN.png",
APINET = "img/Logo_APINET.png",
Dauphin = "img/Logo_Dauphin.png",
Nordnet = "img/Logo_Nordnet.png",
Numerisat = "img/Logo_Numerisat.png",
Orange = "img/Logo_Orange.png",
Outremer = "img/Logo_Outremer.png",
Skysat = "img/Logo_Skysat.png",
STOI = "img/Logo_STOI.png",
Weaccess = "img/Logo_Weaccess.png",
Xankom = "img/Logo_Xankom.png"
)
# Boucle pour parcourir chaque paire de colonnes "opérateur" et "logo"
for (i in 1:7) {
operateur_col <- paste0("opérateur", i)
logo_col <- paste0("Logo", i)
data<- data %>%
mutate({{logo_col}} := case_when(
.data[[operateur_col]] == "SFR" ~ correspondances$SFR,
.data[[operateur_col]] == "SRR" ~ correspondances$SFR,
.data[[operateur_col]] == "Dyrun" ~ correspondances$Dyrun,
.data[[operateur_col]] == "Apinet" ~ correspondances$APINET,
.data[[operateur_col]] == "Dauphin Télécom" ~ correspondances$Dauphin,
.data[[operateur_col]] == "Nordnet" ~ correspondances$Nordnet,
.data[[operateur_col]] == "Numérisat" ~ correspondances$Numerisat,
.data[[operateur_col]] == "Orange" ~ correspondances$Orange,
.data[[operateur_col]] == "Outremer Télécom" ~ correspondances$Outremer,
.data[[operateur_col]] == "SKYSAT" ~ correspondances$Skysat,
.data[[operateur_col]] == "STOI" ~ correspondances$STOI,
.data[[operateur_col]] == "Weaccess Group" ~ correspondances$Weaccess,
.data[[operateur_col]] == "Xankom" ~ correspondances$Xankom,
TRUE ~ .data[[logo_col]]
))
}
#Je vais venir joindre les données des opérateur à ma couche geojson----
data_geom<-geom_init%>%
left_join(data, by="insee_dep")
#export de la nouvelle couche de données
st_write(obj = data_geom,
dsn = ("N://DST/Carto/INTERACTIVITE/fthd_operateurs/data/geom/data_dep.geojson"),
driver = "GeoJSON", delete_layer = T, append = F)
# I Chargement des librairies -----------
library(sf)
library(rgdal)
library(tidyverse)
library(readxl)
library(writexl)
library(RSQLite)
library(here)
# I Chargement des librairies -----------
library(sf)
library(rgdal)
library(tidyverse)
library(readxl)
library(writexl)
library(RSQLite)
library(here)
geom_init<-st_read(here("geom/source/centroide_fr_drom_com.gpkg"), layer="cheflieu-reg")
dep_init <-st_read("N://DST/Carto/INTERACTIVITE/fthd_operateurs/data/geom/source/fr-drom-4326-pur-style1-dep.geojson")
#modification de la projection  des données
geom_cheflieu <- st_transform(geom_init, crs = st_crs(4326))
#Chargement des fichiers des iles
st_bart_init<-st_read("geom/source/st-barth.gpkg")
st_martin_init<-st_read("geom/source/st-martin.gpkg")
st_pierre_et_miquelon_init<-st_read("geom/source/st_pierre_et_miquelon.gpkg")
#couche des contours des iles
contours_iles_init<-st_read("geom/source/contours_iles.geojson")
#couche des territoires frontaliers en min
ter_front_init<- st_read("geom/source/territoire-frontalier-fra-4326-pur.geojson")
ter_front<-st_transform(ter_front_init, crs=st_crs(4326))
st_write(obj = ter_front,
dsn = here(paste0("geom/territoires_frontaliers.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
# I Chargement des librairies -----------
library(sf)
library(rgdal)
library(tidyverse)
library(readxl)
library(writexl)
library(RSQLite)
library(here)
# Spécifier le chemin vers le fichier shapefile (sans l'extension .shp)
chemin_shapefile <- "N:/DST/Carto/APPROCHE_GEOGRAPHIQUE/ACTION_COEUR_DE_VILLE/geom/habillage_guyane"
# Charger le fichier shapefile en tant qu'objet sf
donnees_sf <- st_read(dsn = chemin_shapefile)
# Charger le fichier shapefile en tant qu'objet sf
donnees_sf <- st_read(dsn = chemin_shapefile)
# Spécifier le chemin vers le fichier shapefile (sans l'extension .shp)
chemin_shapefile <- "N:/DST/Carto/APPROCHE_GEOGRAPHIQUE/ACTION_COEUR_DE_VILLE/geom/habillage_guyane"
# Charger le fichier shapefile en tant qu'objet sf
donnees_sf <- st_read(dsn = chemin_shapefile)
# Spécifier le chemin vers le fichier shapefile (sans l'extension .shp)
chemin_shapefile <- "N:/DST/Carto/APPROCHE_GEOGRAPHIQUE/ACTION_COEUR_DE_VILLE/geom/habillage_guyane.shp"
# Charger le fichier shapefile en tant qu'objet sf
donnees_sf <- st_read(dsn = chemin_shapefile)
View(donnees_sf)
# Convertir l'objet sf en GeoJSON
donnees_geojson <- sf::st_write(donnees_sf, dsn = "chemin/vers/votre/sortie.geojson", driver = "GeoJSON")
# Convertir l'objet sf en GeoJSON
donnees_geojson <- sf::st_write(donnees_sf, dsn = "N://DST/Carto/INTERACTIVITE/fthd_operateurs/data/geom/source/hab_guyane_src.geojson", driver = "GeoJSON")
# I Chargement des librairies -----------
library(sf)
library(rgdal)
library(tidyverse)
library(readxl)
library(writexl)
library(RSQLite)
library(here)
geom_init<-st_read(here("geom/source/centroide_fr_drom_com.gpkg"), layer="cheflieu-reg")
dep_init <-st_read("N://DST/Carto/INTERACTIVITE/fthd_operateurs/data/geom/source/fr-drom-4326-pur-style1-dep.geojson")
#modification de la projection  des données
geom_cheflieu <- st_transform(geom_init, crs = st_crs(4326))
#Chargement des fichiers des iles
st_bart_init<-st_read("geom/source/st-barth.gpkg")
st_martin_init<-st_read("geom/source/st-martin.gpkg")
st_pierre_et_miquelon_init<-st_read("geom/source/st_pierre_et_miquelon.gpkg")
#couche des contours des iles
contours_iles_init<-st_read("geom/source/contours_iles.geojson")
#couche des territoires frontaliers en min
ter_front_init<- st_read("geom/source/territoire-frontalier-fra-4326-pur.geojson")
#couche habillage Guyane
hab_guyane_init<- st_read("geom/source/hab_guyane_src.geojson")
#Modification de la projection des données
dep<-st_transform(dep_init, crs = st_crs(4326))
st_bart<-st_transform(st_bart_init, crs = st_crs(4326))
st_martin<-st_transform(st_martin_init, crs = st_crs(4326))
st_pierre_et_miquelon<-st_transform(st_pierre_et_miquelon_init, crs = st_crs(4326))
contours_iles_reprojetees<-st_transform(contours_iles_init, crs=st_crs(4326))
ter_front<-st_transform(ter_front_init, crs=st_crs(4326))
hab_guyane<-st_transform(hab_guyane_init, crs=st_crs(4326))
#Creation d'une nouvelle couche qui contient tous les departements et les iles du programme
geom_st_martin<- st_martin%>%
summarise(insee_dep="978", insee_reg="", geometry = st_union(geom))
geom_st_bart<-st_bart%>%
summarise(insee_dep="977", insee_reg="", geometry = st_union(geom))
geom_st_pierre_et_miquelon<-st_pierre_et_miquelon%>%
summarise(insee_dep="975", insee_reg="", geometry = st_union(geom))
#on vient regrouper l'ensemble de nos geometries dans un seul et même geojson
geom_final<- rbind(dep, geom_st_martin, geom_st_bart, geom_st_pierre_et_miquelon)
#Export des données transformées
st_write(obj = geom_cheflieu,
dsn = here(paste0("geom/chef_lieu_reg.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
st_write(obj = geom_final,
dsn = here(paste0("geom/source/geom_dep_com.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
st_write(obj = contours_iles_reprojetees,
dsn = here(paste0("geom/contours_iles_reprojetees.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
st_write(obj = ter_front,
dsn = here(paste0("geom/territoires_frontaliers.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
st_write(obj = hab_guyane,
dsn = here(paste0("geom/habillage_guyane.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
# I Chargement des librairies -----------
library(sf)
library(rgdal)
library(tidyverse)
library(readxl)
library(writexl)
library(RSQLite)
library(here)
geom_init<-st_read(here("geom/source/centroide_fr_drom_com.gpkg"), layer="cheflieu-reg")
dep_init <-st_read("N://DST/Carto/INTERACTIVITE/fthd_operateurs/data/geom/source/fr-drom-4326-pur-style1-dep.geojson")
#modification de la projection  des données
geom_cheflieu <- st_transform(geom_init, crs = st_crs(4326))
#Chargement des fichiers des iles
st_bart_init<-st_read("geom/source/st-barth.gpkg")
st_martin_init<-st_read("geom/source/st-martin.gpkg")
st_pierre_et_miquelon_init<-st_read("geom/source/st_pierre_et_miquelon.gpkg")
#couche des contours des iles
contours_iles_init<-st_read("geom/source/contours_iles.geojson")
#couche des territoires frontaliers en min
ter_front_init<- st_read("geom/source/territoire-frontalier-fra-4326-pur.geojson")
#couche habillage Guyane
hab_guyane_init<- st_read("geom/source/hab_guyane_src.geojson")
#Modification de la projection des données
dep<-st_transform(dep_init, crs = st_crs(4326))
st_bart<-st_transform(st_bart_init, crs = st_crs(4326))
st_martin<-st_transform(st_martin_init, crs = st_crs(4326))
st_pierre_et_miquelon<-st_transform(st_pierre_et_miquelon_init, crs = st_crs(4326))
contours_iles_reprojetees<-st_transform(contours_iles_init, crs=st_crs(4326))
ter_front<-st_transform(ter_front_init, crs=st_crs(4326))
hab_guyane<-st_transform(hab_guyane_init, crs=st_crs(4326))
#Creation d'une nouvelle couche qui contient tous les departements et les iles du programme
geom_st_martin<- st_martin%>%
summarise(insee_dep="978", insee_reg="", geometry = st_union(geom))
geom_st_bart<-st_bart%>%
summarise(insee_dep="977", insee_reg="", geometry = st_union(geom))
geom_st_pierre_et_miquelon<-st_pierre_et_miquelon%>%
summarise(insee_dep="975", insee_reg="", geometry = st_union(geom))
#on vient regrouper l'ensemble de nos geometries dans un seul et même geojson
geom_final<- rbind(dep, geom_st_martin, geom_st_bart, geom_st_pierre_et_miquelon)
#Export des données transformées
st_write(obj = geom_cheflieu,
dsn = here(paste0("geom/chef_lieu_reg.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
st_write(obj = geom_final,
dsn = here(paste0("geom/source/geom_dep_com.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
st_write(obj = contours_iles_reprojetees,
dsn = here(paste0("geom/contours_iles_reprojetees.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
st_write(obj = ter_front,
dsn = here(paste0("geom/territoires_frontaliers.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
st_write(obj = hab_guyane,
dsn = here(paste0("geom/habillage_guyane.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
# I Chargement des librairies -----------
library(sf)
library(rgdal)
library(tidyverse)
library(readxl)
library(writexl)
library(RSQLite)
library(here)
#chargement des données initiales ----
geom_init<-st_read("N://DST/Carto/INTERACTIVITE/fthd_operateurs/data/geom/source/geom_dep_com.geojson")
data_init<-read_excel("N://DST/Carto/INTERACTIVITE/fthd_operateurs/data/Fichier carto_Cohésion numérique.xlsx")%>%
rename("insee_dep"="INSEE dptmt")%>%
rename("dep"="Département")%>%
rename("Logo1"="Logo")%>%
rename("Logo7"="logo7")%>%
rename("prise_encharge1"="Prise en charge supérieure à 300€ (sous conditions de ressources)")%>%
rename("prise_encharge2"="Prise en charge supérieure à 300€ (sous conditions de ressources)2")%>%
rename("prise_encharge3"="Prise en charge supérieure à 300€ (sous conditions de ressources)3")%>%
rename("prise_encharge4"="Prise en charge supérieure à 300€ (sous conditions de ressources)4")%>%
rename("prise_encharge5"="Prise en charge supérieure à 300€ (sous conditions de ressources)5")%>%
rename("prise_encharge6"="Prise en charge supérieure à 300€ (sous conditions de ressources)6")%>%
rename("prise_encharge7"="Prise en charge supérieure à 300€ (sous conditions de ressources)7")%>%
mutate(insee_dep = ifelse(nchar(insee_dep) == 1, paste0("0", insee_dep), insee_dep))
data<-data_init
#Je viens modifier les chemins des images indiquées dans le tableur initial
# Définir les correspondances entre opérateurs et logos----
correspondances <- list(
SFR = "img/Logo_SFR.png",
Dyrun = "img/Logo_DYRUN.png",
APINET = "img/Logo_APINET.png",
Dauphin = "img/Logo_Dauphin.png",
Nordnet = "img/Logo_Nordnet.png",
Numerisat = "img/Logo_Numerisat.png",
Orange = "img/Logo_Orange.png",
Outremer = "img/Logo_Outremer.png",
Skysat = "img/Logo_Skysat.png",
STOI = "img/Logo_STOI.png",
Weaccess = "img/Logo_Weaccess.png",
Xankom = "img/Logo_Xankom.png"
)
# Boucle pour parcourir chaque paire de colonnes "opérateur" et "logo"
for (i in 1:7) {
operateur_col <- paste0("opérateur", i)
logo_col <- paste0("Logo", i)
data<- data %>%
mutate({{logo_col}} := case_when(
.data[[operateur_col]] == "SFR" ~ correspondances$SFR,
.data[[operateur_col]] == "SRR" ~ correspondances$SFR,
.data[[operateur_col]] == "Dyrun" ~ correspondances$Dyrun,
.data[[operateur_col]] == "Apinet" ~ correspondances$APINET,
.data[[operateur_col]] == "Dauphin Télécom" ~ correspondances$Dauphin,
.data[[operateur_col]] == "Nordnet" ~ correspondances$Nordnet,
.data[[operateur_col]] == "Numérisat" ~ correspondances$Numerisat,
.data[[operateur_col]] == "Orange" ~ correspondances$Orange,
.data[[operateur_col]] == "Outremer Télécom" ~ correspondances$Outremer,
.data[[operateur_col]] == "SKYSAT" ~ correspondances$Skysat,
.data[[operateur_col]] == "STOI" ~ correspondances$STOI,
.data[[operateur_col]] == "Weaccess Group" ~ correspondances$Weaccess,
.data[[operateur_col]] == "Xankom" ~ correspondances$Xankom,
TRUE ~ .data[[logo_col]]
))
}
#Je vais venir joindre les données des opérateur à ma couche geojson----
data_geom<-geom_init%>%
left_join(data, by="insee_dep")
#export de la nouvelle couche de données
st_write(obj = data_geom,
dsn = ("N://DST/Carto/INTERACTIVITE/fthd_operateurs/data/geom/data_dep.geojson"),
driver = "GeoJSON", delete_layer = T, append = F)
# I Chargement des librairies -----------
library(sf)
library(rgdal)
library(tidyverse)
library(readxl)
library(writexl)
library(RSQLite)
library(here)
geom_init<-st_read(here("geom/source/centroide_fr_drom_com.gpkg"), layer="cheflieu-reg")
dep_init <-st_read("N://DST/Carto/INTERACTIVITE/fthd_operateurs/data/geom/source/fr-drom-4326-pur-style1-dep.geojson")
#modification de la projection  des données
geom_cheflieu <- st_transform(geom_init, crs = st_crs(4326))
#Chargement des fichiers des iles
st_bart_init<-st_read("geom/source/st-barth.gpkg")
st_martin_init<-st_read("geom/source/st-martin.gpkg")
st_pierre_et_miquelon_init<-st_read("geom/source/st_pierre_et_miquelon.gpkg")
#couche des contours des iles
contours_iles_init<-st_read("geom/source/contours_iles.geojson")
#couche des territoires frontaliers en min
ter_front_init<- st_read("geom/source/territoire-frontalier-fra-4326-pur.geojson")
#couche habillage Guyane
hab_guyane_init<- st_read("geom/source/hab_guyane_src.geojson")
#Modification de la projection des données
dep<-st_transform(dep_init, crs = st_crs(4326))
st_bart<-st_transform(st_bart_init, crs = st_crs(4326))
st_martin<-st_transform(st_martin_init, crs = st_crs(4326))
st_pierre_et_miquelon<-st_transform(st_pierre_et_miquelon_init, crs = st_crs(4326))
contours_iles_reprojetees<-st_transform(contours_iles_init, crs=st_crs(4326))
ter_front<-st_transform(ter_front_init, crs=st_crs(4326))
hab_guyane<-st_transform(hab_guyane_init, crs=st_crs(4326))
hab_guyane <- st_difference(hab_guyane, contours_iles_reprojetees)
#Creation d'une nouvelle couche qui contient tous les departements et les iles du programme
geom_st_martin<- st_martin%>%
summarise(insee_dep="978", insee_reg="", geometry = st_union(geom))
geom_st_bart<-st_bart%>%
summarise(insee_dep="977", insee_reg="", geometry = st_union(geom))
geom_st_pierre_et_miquelon<-st_pierre_et_miquelon%>%
summarise(insee_dep="975", insee_reg="", geometry = st_union(geom))
hab_guyane<-st_transform(hab_guyane_init, crs=st_crs(4326))
View(contours_iles_reprojetees)
hab_guyane<-st_transform(hab_guyane_init, crs=st_crs(4326))
contours_guyane <- subset(contours_iles_reprojetees, iso_territoire_2 == "GF")
hab_guyane <- st_difference(hab_guyane, contours_guyane)
View(contours_guyane)
hab_guyane<-st_transform(hab_guyane_init, crs=st_crs(4326))
contours_guyane <- subset(contours_iles_reprojetees, iso_territoire_2 == "GF")
contours_guyane_poly <- st_polygonize(contours_guyane)
hab_guyane <- st_difference(hab_guyane, contours_guyane)
hab_guyane <- st_difference(hab_guyane, contours_guyane_poly)
View(contours_guyane_poly)
#couche habillage Guyane
guyane_init<- st_read("geom/source/hab_guyane_src.geojson")
#couche habillage Guyane
hab_guyane_init<- st_read("geom/source/hab_guyane_src.geojson")
hab_guyane<-st_transform(hab_guyane_init, crs=st_crs(4326))
st_write(obj = hab_guyane,
dsn = here(paste0("geom/habillage_guyane.geojson")),
driver = "GeoJSON", delete_layer = TRUE, append = FALSE)
View(geom_cheflieu)
View(geom_cheflieu)
